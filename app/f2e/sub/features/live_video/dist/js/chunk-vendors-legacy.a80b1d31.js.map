{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/is_js/is.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/core-js/modules/_html.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","core","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","dP","anObject","getKeys","defineProperties","Properties","length","i","f","defer","channel","port","ctx","invoke","html","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","id","hasOwnProperty","fn","listener","event","data","args","arguments","push","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","set","clear","clean","s","replace","sa","iterator","value","ret","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","test","tryFunctionObject","toStr","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","isObject","document","is","createElement","it","cof","ARG","tryGet","T","B","callee","Stream","MAX_TS","RO_THRESH","handleRollover","reference","direction","Math","abs","TimestampRolloverStream","type","lastDTS","referenceDTS","init","type_","dts","pts","trigger","flush","discontinuity","classof","getIteratorMethod","findBox","parseType","timescale","startTime","toUnsigned","path","size","end","subresults","results","byteLength","subarray","slice","concat","buffer","result","String","fromCharCode","traks","reduce","trak","tkhd","version","index","mdhd","fragment","trafs","baseTimes","apply","map","traf","tfhd","scale","baseTime","tfdt","pow","Infinity","min","isFinite","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","d","__webpack_exports__","has","SRC","TO_STRING","$toString","TPL","split","inspectSource","val","safe","join","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","src","contentWindow","open","write","close","create","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","n","parseFloat","floor","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","list","toLowerCase","isReservedAttribute","remove","arr","item","indexOf","splice","hasOwn","cached","cache","hit","camelizeRE","camelize","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","boundFn","a","l","_length","nativeBind","bind","toArray","start","Array","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","parsePath","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","get","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","warn","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","props","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","p","resolve","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","force","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","store","USE_SYMBOL","$exports","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","applyMixin","vuexInit","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","replaceState","subscribe","mutation","state","forEachValue","isPromise","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","namespaced","addChild","getChild","actions","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","register","targetModule","newModule","root","getNamespace","rawChildModule","unregister","Store","plugins","strict","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","dispatch","commit","payload","installModule","resetStoreVM","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","action","registerAction","registerGetter","noNamespace","_type","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","entry","rootGetters","catch","rawGetter","_Vue","all","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","helper","index_esm","_asyncToGenerator","self","gen","step","arg","done","_next","_throw","that","un","createDesc","object","ArrayProto","ObjectProto","unpad","padded","decrypt","aes_decrypter_es_Decrypter","AsyncStream","classCallCheck","instance","TypeError","createClass","descriptor","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","possibleConstructorReturn","ReferenceError","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","Error","_key","encrypted0","encrypted1","encrypted2","encrypted3","out","offset","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","off","dispose","pipe","destination","_Stream","_this","jobs","timeout_","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","byteOffset","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","Uint32Array","bytes","StreamTypes","parsePid","packet","pid","parsePayloadUnitStartIndicator","parseAdaptionField","pmtPid","parsePat","pusi","parsePmt","programMapTable","payloadOffset","sectionLength","tableEnd","programInfoLength","parsePesType","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","parsePesTime","ptsDtsFlags","pes","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","flushSource","ceil","bitmap","right","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","iterFn","defined","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","task","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","FakePromise","exec","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","domain","_h","onHandleUnhandled","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","S","r","capability","$$reject","iter","remaining","$index","alreadyCalled","race","SHARED","copyright","own","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","SAFE_CLOSING","riter","skipClosing","shared","propertyIsEnumerable","headers","row","IObject","valueOf","__g","toInteger","DESCRIPTORS","SPECIES","KEY","stat","macrotask","MutationObserver","WebKitMutationObserver","head","standalone","toggle","characterData","string","alert","confirm","prompt","__e","parse","parseUTCTiming","url_toolkit__WEBPACK_IMPORTED_MODULE_0__","url_toolkit__WEBPACK_IMPORTED_MODULE_0___default","global_window__WEBPACK_IMPORTED_MODULE_1__","global_window__WEBPACK_IMPORTED_MODULE_1___default","formatAudioPlaylist","_ref","_attributes","attributes","playlist","BANDWIDTH","bandwidth","CODECS","codecs","uri","endList","timeline","periodIndex","resolvedUri","targetDuration","mediaSequence","contentProtection","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","playlists","role","language","lang","label","autoselect","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","width","height","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoOnly","_ref4","mimeType","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","master","allowCache","discontinuityStarts","mediaGroups","VIDEO","audio","_typeof","merge","_len","objects","resolveUrl","relativeUrl","buildAbsoluteURL","location","href","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","endRange","byterange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodStartWC","periodEndWC","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","repeat","segmentTime","t","count","nextS","flatten","lists","y","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","identifier","format","constructTemplateUrl","url","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","segment","Time","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","initSegment","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","element","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","Date","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","array","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","acc","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","parser","DOMParser","xml","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","IE8_DOM_DEFINE","toPrimitive","Attributes","SafeParseTuple","reviver","json","condition","message","isError","View","routerView","route","$route","_routerViewCache","depth","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","encodeURIComponent","decode","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","val2","trailingSlashRE","createRoute","record","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","stack","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","m","escaped","prefix","group","modifier","asterisk","partial","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","re","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","regexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","position","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","reverse","guards","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","search","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","isLocalhost","hostname","swUrl","checkValidServiceWorker","serviceWorker","registration","registerValidSW","onupdatefound","installingWorker","installing","onstatechange","controller","fetch","response","status","onLine","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","Context","reset","skipTempReset","sent","_sent","delegate","tryEntries","resetTryEntry","stop","rootEntry","rootRecord","completion","rval","dispatchException","exception","handle","loc","caught","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegateResult","maybeInvokeDelegate","return","pushTryEntry","locs","iteratorMethod","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","percentEncode","parseIso88591","unescape","parseId3TagSize","header","byteIndex","returnSize","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseSampleRate","parseAacTimestamp","frameStart","frameSize","frame","frameHeader","owner","UNSCOPABLES","PromiseCapability","$$resolve","autoKeyword","directionSetting","","lr","rl","alignSetting","findDirectionSetting","findAlignSetting","align","endTime","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","vertical","setting","SyntaxError","snapToLines","line","lineAlign","positionAlign","displayState","getCueAsHTML","convertCueToDOMTree","promiseCapability","win","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","g","eval","px","random","addToUnscopables","iterated","Arguments","arrayIndexOf","names","isCallable","forEachArray","receiver","forEachString","forEachObject","k","thisArg","_objCreate","ParsingError","errorData","code","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","settings","alt","vals","vals0","integer","percent","skipWhitespace","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","track","textTrackList","mediaElement","trackList","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","bottom","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","textPos","formatStyle","move","box","BoxPosition","lh","offsetWidth","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","round","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","boxes","container","intersectArea","getSimpleBoxPosition","StringDecoder","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","paddedOverlay","shouldCompute","margin","fontSize","Parser","decoder","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","hasSubstring","oncue","onflush","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","baseURL","relativeURL","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","baseURLPath","newPath","substring","lastIndexOf","__WEBPACK_AMD_DEFINE_RESULT__","VERSION","not","any","func","getParams","comparator","<","<=",">",">=","compareVersion","NaN","op","boolean","char","date","domNode","nan","sameType","other","api","windowObject","existy","falsy","truthy","above","decimal","equal","even","finite","infinite","negative","odd","positive","under","regexes","affirmative","alphaNumeric","caPostalCode","creditCard","dateString","email","eppPhone","hexadecimal","hexColor","ipv4","ipv6","nanpPhone","socialSecurityNumber","timeString","ukPostCode","usZipCode","regexpCheck","ip","capitalized","words","chr","endWith","lowerCase","palindrome","half","space","startWith","upperCase","days","months","getDay","dayLightSavingTime","january","getFullYear","july","stdTimezoneOffset","getTimezoneOffset","future","getTime","inDateRange","stamp","inLastMonth","setMonth","getMonth","inLastWeek","setDate","getDate","inLastYear","setFullYear","inNextMonth","inNextWeek","inNextYear","leapYear","past","quarterOfYear","quarter","today","todayString","toDateString","tomorrow","tomorrowString","weekend","weekday","yesterday","yesterdayString","freeGlobal","freeSelf","thisGlobal","previousIs","appVersion","vendor","setInterfaces","interfaces","android","androidPhone","androidTablet","blackberry","chrome","desktop","mobile","tablet","edge","firefox","ie","ios","iphone","ipad","ipod","linux","mac","windowsPhone","offline","online","opera","phantom","safari","windowsTablet","touchDevice","DocumentTouch","windows","propertyCount","propertyDefined","inArray","sorted","sign","predicate","setNamespace","setRegexp","_extends","LineStream","nextNewline","attributeSeparator","keyvalue","ParseStream","customParsers","tagType","title","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this2","customType","dataParser","lineStream","parseStream","uris","currentUri","currentMap","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","chunk","probe","aac","PES_TIMESCALE","MP2T_PACKET_LENGTH","SYNC_BYTE","isLikelyAacData","parsePsi_","pmt","startIndex","endIndex","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","currentFrame","video","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","timestamp","audioTimescale","inspectTs_","inspect","isAacData","D","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","readystatechange","xhr","readyState","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","nodeName","doccy","topLevel","minDoc","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","global_document__WEBPACK_IMPORTED_MODULE_1__","global_document__WEBPACK_IMPORTED_MODULE_1___default","tsml__WEBPACK_IMPORTED_MODULE_2__","tsml__WEBPACK_IMPORTED_MODULE_2___default","xhr__WEBPACK_IMPORTED_MODULE_3__","xhr__WEBPACK_IMPORTED_MODULE_3___default","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4__","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4___default","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5__","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5___default","url_toolkit__WEBPACK_IMPORTED_MODULE_6__","url_toolkit__WEBPACK_IMPORTED_MODULE_6___default","m3u8_parser__WEBPACK_IMPORTED_MODULE_7__","mpd_parser__WEBPACK_IMPORTED_MODULE_8__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9___default","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10__","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10___default","aes_decrypter__WEBPACK_IMPORTED_MODULE_11__","log","level","logByType","lvl","levels","lvlRegExp","debug","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","taggedTemplateLiteralLoose","strings","each","accum","sources","isPlain","computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","isEl","isInFrame","createQuerier","createEl","properties","content","propName","attrName","appendContent","prependTo","hasClass","classToCheck","contains","classToAdd","classToRemove","toggleClass","classToToggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","clientLeft","scrollLeft","clientTop","scrollTop","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","emptyEl","normalizeContent","insertContent","isSingleLeftClick","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","hasData","removeData","_cleanUpEvents","elem","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","Events","_windowLoaded","videojs","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","styleSheet","bound","throttle","throttled","debounce","_later","EventTarget","allowedEvents_","ael","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","Component","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","addToBody","host","protocol","details","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","preselectTrack","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","stepChild","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userWasActive","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this8","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","_this9","middlewareSource","src_","notSupportedMessage","_this10","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this11","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","normalizeId","videojs$1","getPlayer","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","writeable","addLanguage","_mergeOptions","createTimeRange","dom","classCallCheck$1","createClass$1","get$2","get$$1","inherits$1","possibleConstructorReturn$1","slicedToArray$1","sliceIterator","_arr","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","PlaylistLoader","srcUrl","hls","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","sumDurations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","seekableStart","seekableEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","hexDump","ascii","tagDump","textRanges","utils","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","trackId","inbandTextTracks_","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","commonjsGlobal","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","mdia","hdlr","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","window_1","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","view","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","nalUnitType","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","startPts","endPts","BASE_","EXT_","CONTROL_","OFFSET_","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","_MetadataStream","timestampRolloverStream","parseUtf8","tagParsers","TXXX","WXXX","PRIV","tagSize","bufferSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","parsePes","packetLength","flushStream","stream$$1","forceFlush","packetData","packetFlushable","timelineStartInfo","codec","m2ts","PAT_PID","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","deltaScale","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","setTimestamp","bytesLeft","tempLength","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","ONE_SECOND_IN_TS","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","createDefaultSample","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS$1","currentObj","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","keepOriginalTimestamps","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","minSegmentDts","minSegmentPts","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","keyFrame","getGopForFusion_","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","currentNal","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","classCallCheck$$1","createClass$$1","wireTransmuxerEvents","initArray","typedArray","gopInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","arity","extents","videoBuffered","audioBuffered","processPendingSegments_","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","clientOffset_","phonyUri","_phonyUri","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","handleInitSegmentResponse","handleSegmentResponse","encryptedBytes","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","getMostImportantError","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","isEndOfStream","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","VTT_LINE_TERMINATORS","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","syncPointStrategies","datetimeToDisplayTime","lastDistance","segmentStart","distance","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","inherits$$1","possibleConstructorReturn$$1","AsyncStream$$1","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","matchingPlaylists","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","seekTo","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","INITIAL_BANDWIDTH","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","source_","keySystems","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pauseLoading","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","forbiddenField","scrollSetting","up","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/chunk-vendors-legacy.a80b1d31.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n","export default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n\n      function _next(value) {\n        step(\"next\", value);\n      }\n\n      function _throw(err) {\n        step(\"throw\", err);\n      }\n\n      _next();\n    });\n  };\n}","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nexport function register (swUrl, hooks) {\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, emit) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) {\n      emit('error', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, emit) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit)\n      }\n    })\n    .catch(function (error) {\n      if (!navigator.onLine) {\n        emit('offline')\n      } else {\n        emit('error', error)\n      }\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/;?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","/*!\n * is.js 0.8.0\n * Author: Aras Atasaygin\n */\n\n// AMD with global, Node, or global\n;(function(root, factory) {    // eslint-disable-line no-extra-semi\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            // Also create a global in case some scripts\n            // that are loaded still are looking for\n            // a global even when an AMD loader is in use.\n            return (root.is = factory());\n        });\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is self)\n        root.is = factory();\n    }\n}(this, function() {\n\n    // Baseline\n    /* -------------------------------------------------------------------------- */\n\n    // define 'is' object and current version\n    var is = {};\n    is.VERSION = '0.8.0';\n\n    // define interfaces\n    is.not = {};\n    is.all = {};\n    is.any = {};\n\n    // cache some methods to call later on\n    var toString = Object.prototype.toString;\n    var slice = Array.prototype.slice;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // helper function which reverses the sense of predicate result\n    function not(func) {\n        return function() {\n            return !func.apply(null, slice.call(arguments));\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if all pass\n    function all(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (!func.call(null, params[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if any pass\n    function any(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (func.call(null, params[i])) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    // build a 'comparator' object for various comparison checks\n    var comparator = {\n        '<': function(a, b) { return a < b; },\n        '<=': function(a, b) { return a <= b; },\n        '>': function(a, b) { return a > b; },\n        '>=': function(a, b) { return a >= b; }\n    }\n\n    // helper function which compares a version to a range\n    function compareVersion(version, range) {\n        var string = (range + '');\n        var n = +(string.match(/\\d+/) || NaN);\n        var op = string.match(/^[<>]=?|/)[0];\n        return comparator[op] ? comparator[op](version, n) : (version == n || n !== n);\n    }\n\n    // helper function which extracts params from arguments\n    function getParams(args) {\n        var params = slice.call(args);\n        var length = params.length;\n        if (length === 1 && is.array(params[0])) {    // support array\n            params = params[0];\n        }\n        return params;\n    }\n\n    // Type checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given value Arguments?\n    is.arguments = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Arguments]' ||\n            (value != null && typeof value === 'object' && 'callee' in value);\n    };\n\n    // is a given value Array?\n    is.array = Array.isArray || function(value) {    // check native isArray first\n        return toString.call(value) === '[object Array]';\n    };\n\n    // is a given value Boolean?\n    is.boolean = function(value) {\n        return value === true || value === false || toString.call(value) === '[object Boolean]';\n    };\n\n    // is a given value Char?\n    is.char = function(value) {\n        return is.string(value) && value.length === 1;\n    };\n\n    // is a given value Date Object?\n    is.date = function(value) {\n        return toString.call(value) === '[object Date]';\n    };\n\n    // is a given object a DOM node?\n    is.domNode = function(object) {\n        return is.object(object) && object.nodeType > 0;\n    };\n\n    // is a given value Error object?\n    is.error = function(value) {\n        return toString.call(value) === '[object Error]';\n    };\n\n    // is a given value function?\n    is['function'] = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Function]' || typeof value === 'function';\n    };\n\n    // is given value a pure JSON object?\n    is.json = function(value) {\n        return toString.call(value) === '[object Object]';\n    };\n\n    // is a given value NaN?\n    is.nan = function(value) {    // NaN is number :) Also it is the only value which does not equal itself\n        return value !== value;\n    };\n\n    // is a given value null?\n    is['null'] = function(value) {\n        return value === null;\n    };\n\n    // is a given value number?\n    is.number = function(value) {\n        return is.not.nan(value) && toString.call(value) === '[object Number]';\n    };\n\n    // is a given value object?\n    is.object = function(value) {\n        return Object(value) === value;\n    };\n\n    // is a given value RegExp?\n    is.regexp = function(value) {\n        return toString.call(value) === '[object RegExp]';\n    };\n\n    // are given values same type?\n    // prevent NaN, Number same type check\n    is.sameType = function(value, other) {\n        var tag = toString.call(value);\n        if (tag !== toString.call(other)) {\n            return false;\n        }\n        if (tag === '[object Number]') {\n            return !is.any.nan(value, other) || is.all.nan(value, other);\n        }\n        return true;\n    };\n    // sameType method does not support 'all' and 'any' interfaces\n    is.sameType.api = ['not'];\n\n    // is a given value String?\n    is.string = function(value) {\n        return toString.call(value) === '[object String]';\n    };\n\n    // is a given value undefined?\n    is.undefined = function(value) {\n        return value === void 0;\n    };\n\n    // is a given value window?\n    // setInterval method is only available for window object\n    is.windowObject = function(value) {\n        return value != null && typeof value === 'object' && 'setInterval' in value;\n    };\n\n    // Presence checks\n    /* -------------------------------------------------------------------------- */\n\n    //is a given value empty? Objects, arrays, strings\n    is.empty = function(value) {\n        if (is.object(value)) {\n            var length = Object.getOwnPropertyNames(value).length;\n            if (length === 0 || (length === 1 && is.array(value)) ||\n                    (length === 2 && is.arguments(value))) {\n                return true;\n            }\n            return false;\n        }\n        return value === '';\n    };\n\n    // is a given value existy?\n    is.existy = function(value) {\n        return value != null;\n    };\n\n    // is a given value falsy?\n    is.falsy = function(value) {\n        return !value;\n    };\n\n    // is a given value truthy?\n    is.truthy = not(is.falsy);\n\n    // Arithmetic checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given number above minimum parameter?\n    is.above = function(n, min) {\n        return is.all.number(n, min) && n > min;\n    };\n    // above method does not support 'all' and 'any' interfaces\n    is.above.api = ['not'];\n\n    // is a given number decimal?\n    is.decimal = function(n) {\n        return is.number(n) && n % 1 !== 0;\n    };\n\n    // are given values equal? supports numbers, strings, regexes, booleans\n    // TODO: Add object and array support\n    is.equal = function(value, other) {\n        // check 0 and -0 equity with Infinity and -Infinity\n        if (is.all.number(value, other)) {\n            return value === other && 1 / value === 1 / other;\n        }\n        // check regexes as strings too\n        if (is.all.string(value, other) || is.all.regexp(value, other)) {\n            return '' + value === '' + other;\n        }\n        if (is.all.boolean(value, other)) {\n            return value === other;\n        }\n        return false;\n    };\n    // equal method does not support 'all' and 'any' interfaces\n    is.equal.api = ['not'];\n\n    // is a given number even?\n    is.even = function(n) {\n        return is.number(n) && n % 2 === 0;\n    };\n\n    // is a given number finite?\n    is.finite = isFinite || function(n) {\n        return is.not.infinite(n) && is.not.nan(n);\n    };\n\n    // is a given number infinite?\n    is.infinite = function(n) {\n        return n === Infinity || n === -Infinity;\n    };\n\n    // is a given number integer?\n    is.integer = function(n) {\n        return is.number(n) && n % 1 === 0;\n    };\n\n    // is a given number negative?\n    is.negative = function(n) {\n        return is.number(n) && n < 0;\n    };\n\n    // is a given number odd?\n    is.odd = function(n) {\n        return is.number(n) && n % 2 === 1;\n    };\n\n    // is a given number positive?\n    is.positive = function(n) {\n        return is.number(n) && n > 0;\n    };\n\n    // is a given number above maximum parameter?\n    is.under = function(n, max) {\n        return is.all.number(n, max) && n < max;\n    };\n    // least method does not support 'all' and 'any' interfaces\n    is.under.api = ['not'];\n\n    // is a given number within minimum and maximum parameters?\n    is.within = function(n, min, max) {\n        return is.all.number(n, min, max) && n > min && n < max;\n    };\n    // within method does not support 'all' and 'any' interfaces\n    is.within.api = ['not'];\n\n    // Regexp checks\n    /* -------------------------------------------------------------------------- */\n    // Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook\n    // Scott Gonzalez: Email address validation\n\n    // dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two or four digits for the year\n    // eppPhone match extensible provisioning protocol format\n    // nanpPhone match north american number plan format\n    // time match hours, minutes, and seconds, 24-hour clock\n    var regexes = {\n        affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,\n        alphaNumeric: /^[A-Za-z0-9]+$/,\n        caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\s?[0-9][A-Z][0-9]$/,\n        creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\n        dateString: /^(1[0-2]|0?[1-9])([\\/-])(3[01]|[12][0-9]|0?[1-9])(?:\\2)(?:[0-9]{2})?[0-9]{2}$/,\n        email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, // eslint-disable-line no-control-regex\n        eppPhone: /^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x.+)?$/,\n        hexadecimal: /^(?:0x)?[0-9a-fA-F]+$/,\n        hexColor: /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,\n        ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n        ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\n        nanpPhone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n        socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,\n        timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\n        ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,\n        url: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\n        usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/\n    };\n\n    function regexpCheck(regexp, regexes) {\n        is[regexp] = function(value) {\n            return regexes[regexp].test(value);\n        };\n    }\n\n    // create regexp checks methods from 'regexes' object\n    for (var regexp in regexes) {\n        if (regexes.hasOwnProperty(regexp)) {\n            regexpCheck(regexp, regexes);\n        }\n    }\n\n    // simplify IP checks by calling the regex helpers for IPv4 and IPv6\n    is.ip = function(value) {\n        return is.ipv4(value) || is.ipv6(value);\n    };\n\n    // String checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given string or sentence capitalized?\n    is.capitalized = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        var words = string.split(' ');\n        for (var i = 0; i < words.length; i++) {\n            var word = words[i];\n            if (word.length) {\n                var chr = word.charAt(0);\n                if (chr !== chr.toUpperCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n\n    // is string end with a given target parameter?\n    is.endWith = function(string, target) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        target += '';\n        var position = string.length - target.length;\n        return position >= 0 && string.indexOf(target, position) === position;\n    };\n    // endWith method does not support 'all' and 'any' interfaces\n    is.endWith.api = ['not'];\n\n    // is a given string include parameter target?\n    is.include = function(string, target) {\n        return string.indexOf(target) > -1;\n    };\n    // include method does not support 'all' and 'any' interfaces\n    is.include.api = ['not'];\n\n    // is a given string all lowercase?\n    is.lowerCase = function(string) {\n        return is.string(string) && string === string.toLowerCase();\n    };\n\n    // is a given string palindrome?\n    is.palindrome = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        string = string.replace(/[^a-zA-Z0-9]+/g, '').toLowerCase();\n        var length = string.length - 1;\n        for (var i = 0, half = Math.floor(length / 2); i <= half; i++) {\n            if (string.charAt(i) !== string.charAt(length - i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // is a given value space?\n    // horizantal tab: 9, line feed: 10, vertical tab: 11, form feed: 12, carriage return: 13, space: 32\n    is.space = function(value) {\n        if (is.not.char(value)) {\n            return false;\n        }\n        var charCode = value.charCodeAt(0);\n        return (charCode > 8 && charCode < 14) || charCode === 32;\n    };\n\n    // is string start with a given target parameter?\n    is.startWith = function(string, target) {\n        return is.string(string) && string.indexOf(target) === 0;\n    };\n    // startWith method does not support 'all' and 'any' interfaces\n    is.startWith.api = ['not'];\n\n    // is a given string all uppercase?\n    is.upperCase = function(string) {\n        return is.string(string) && string === string.toUpperCase();\n    };\n\n    // Time checks\n    /* -------------------------------------------------------------------------- */\n\n    var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    var months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\n    // is a given dates day equal given day parameter?\n    is.day = function(date, day) {\n        return is.date(date) && day.toLowerCase() === days[date.getDay()];\n    };\n    // day method does not support 'all' and 'any' interfaces\n    is.day.api = ['not'];\n\n    // is a given date in daylight saving time?\n    is.dayLightSavingTime = function(date) {\n        var january = new Date(date.getFullYear(), 0, 1);\n        var july = new Date(date.getFullYear(), 6, 1);\n        var stdTimezoneOffset = Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());\n        return date.getTimezoneOffset() < stdTimezoneOffset;\n    };\n\n    // is a given date future?\n    is.future = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() > now.getTime();\n    };\n\n    // is date within given range?\n    is.inDateRange = function(date, start, end) {\n        if (is.not.date(date) || is.not.date(start) || is.not.date(end)) {\n            return false;\n        }\n        var stamp = date.getTime();\n        return stamp > start.getTime() && stamp < end.getTime();\n    };\n    // inDateRange method does not support 'all' and 'any' interfaces\n    is.inDateRange.api = ['not'];\n\n    // is a given date in last month range?\n    is.inLastMonth = function(date) {\n        return is.inDateRange(date, new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date());\n    };\n\n    // is a given date in last week range?\n    is.inLastWeek = function(date) {\n        return is.inDateRange(date, new Date(new Date().setDate(new Date().getDate() - 7)), new Date());\n    };\n\n    // is a given date in last year range?\n    is.inLastYear = function(date) {\n        return is.inDateRange(date, new Date(new Date().setFullYear(new Date().getFullYear() - 1)), new Date());\n    };\n\n    // is a given date in next month range?\n    is.inNextMonth = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setMonth(new Date().getMonth() + 1)));\n    };\n\n    // is a given date in next week range?\n    is.inNextWeek = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setDate(new Date().getDate() + 7)));\n    };\n\n    // is a given date in next year range?\n    is.inNextYear = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setFullYear(new Date().getFullYear() + 1)));\n    };\n\n    // is the given year a leap year?\n    is.leapYear = function(year) {\n        return is.number(year) && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    };\n\n    // is a given dates month equal given month parameter?\n    is.month = function(date, month) {\n        return is.date(date) && month.toLowerCase() === months[date.getMonth()];\n    };\n    // month method does not support 'all' and 'any' interfaces\n    is.month.api = ['not'];\n\n    // is a given date past?\n    is.past = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() < now.getTime();\n    };\n\n    // is a given date in the parameter quarter?\n    is.quarterOfYear = function(date, quarter) {\n        return is.date(date) && is.number(quarter) && quarter === Math.floor((date.getMonth() + 3) / 3);\n    };\n    // quarterOfYear method does not support 'all' and 'any' interfaces\n    is.quarterOfYear.api = ['not'];\n\n    // is a given date indicate today?\n    is.today = function(date) {\n        var now = new Date();\n        var todayString = now.toDateString();\n        return is.date(date) && date.toDateString() === todayString;\n    };\n\n    // is a given date indicate tomorrow?\n    is.tomorrow = function(date) {\n        var now = new Date();\n        var tomorrowString = new Date(now.setDate(now.getDate() + 1)).toDateString();\n        return is.date(date) && date.toDateString() === tomorrowString;\n    };\n\n    // is a given date weekend?\n    // 6: Saturday, 0: Sunday\n    is.weekend = function(date) {\n        return is.date(date) && (date.getDay() === 6 || date.getDay() === 0);\n    };\n\n    // is a given date weekday?\n    is.weekday = not(is.weekend);\n\n    // is a given dates year equal given year parameter?\n    is.year = function(date, year) {\n        return is.date(date) && is.number(year) && year === date.getFullYear();\n    };\n    // year method does not support 'all' and 'any' interfaces\n    is.year.api = ['not'];\n\n    // is a given date indicate yesterday?\n    is.yesterday = function(date) {\n        var now = new Date();\n        var yesterdayString = new Date(now.setDate(now.getDate() - 1)).toDateString();\n        return is.date(date) && date.toDateString() === yesterdayString;\n    };\n\n    // Environment checks\n    /* -------------------------------------------------------------------------- */\n\n    var freeGlobal = is.windowObject(typeof global == 'object' && global) && global;\n    var freeSelf = is.windowObject(typeof self == 'object' && self) && self;\n    var thisGlobal = is.windowObject(typeof this == 'object' && this) && this;\n    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n    var document = freeSelf && freeSelf.document;\n    var previousIs = root.is;\n\n    // store navigator properties to use later\n    var navigator = freeSelf && freeSelf.navigator;\n    var appVersion = (navigator && navigator.appVersion || '').toLowerCase();\n    var userAgent = (navigator && navigator.userAgent || '').toLowerCase();\n    var vendor = (navigator && navigator.vendor || '').toLowerCase();\n\n    // is current device android?\n    is.android = function() {\n        return /android/.test(userAgent);\n    };\n    // android method does not support 'all' and 'any' interfaces\n    is.android.api = ['not'];\n\n    // is current device android phone?\n    is.androidPhone = function() {\n        return /android/.test(userAgent) && /mobile/.test(userAgent);\n    };\n    // androidPhone method does not support 'all' and 'any' interfaces\n    is.androidPhone.api = ['not'];\n\n    // is current device android tablet?\n    is.androidTablet = function() {\n        return /android/.test(userAgent) && !/mobile/.test(userAgent);\n    };\n    // androidTablet method does not support 'all' and 'any' interfaces\n    is.androidTablet.api = ['not'];\n\n    // is current device blackberry?\n    is.blackberry = function() {\n        return /blackberry/.test(userAgent) || /bb10/.test(userAgent);\n    };\n    // blackberry method does not support 'all' and 'any' interfaces\n    is.blackberry.api = ['not'];\n\n    // is current browser chrome?\n    // parameter is optional\n    is.chrome = function(range) {\n        var match = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null;\n        return match !== null && compareVersion(match[1], range);\n    };\n    // chrome method does not support 'all' and 'any' interfaces\n    is.chrome.api = ['not'];\n\n    // is current device desktop?\n    is.desktop = function() {\n        return is.not.mobile() && is.not.tablet();\n    };\n    // desktop method does not support 'all' and 'any' interfaces\n    is.desktop.api = ['not'];\n\n    // is current browser edge?\n    // parameter is optional\n    is.edge = function(range) {\n        var match = userAgent.match(/edge\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // edge method does not support 'all' and 'any' interfaces\n    is.edge.api = ['not'];\n\n    // is current browser firefox?\n    // parameter is optional\n    is.firefox = function(range) {\n        var match = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // firefox method does not support 'all' and 'any' interfaces\n    is.firefox.api = ['not'];\n\n    // is current browser internet explorer?\n    // parameter is optional\n    is.ie = function(range) {\n        var match = userAgent.match(/(?:msie |trident.+?; rv:)(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ie method does not support 'all' and 'any' interfaces\n    is.ie.api = ['not'];\n\n    // is current device ios?\n    is.ios = function() {\n        return is.iphone() || is.ipad() || is.ipod();\n    };\n    // ios method does not support 'all' and 'any' interfaces\n    is.ios.api = ['not'];\n\n    // is current device ipad?\n    // parameter is optional\n    is.ipad = function(range) {\n        var match = userAgent.match(/ipad.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipad method does not support 'all' and 'any' interfaces\n    is.ipad.api = ['not'];\n\n    // is current device iphone?\n    // parameter is optional\n    is.iphone = function(range) {\n        // original iPhone doesn't have the os portion of the UA\n        var match = userAgent.match(/iphone(?:.+?os (\\d+))?/);\n        return match !== null && compareVersion(match[1] || 1, range);\n    };\n    // iphone method does not support 'all' and 'any' interfaces\n    is.iphone.api = ['not'];\n\n    // is current device ipod?\n    // parameter is optional\n    is.ipod = function(range) {\n        var match = userAgent.match(/ipod.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipod method does not support 'all' and 'any' interfaces\n    is.ipod.api = ['not'];\n\n    // is current operating system linux?\n    is.linux = function() {\n        return /linux/.test(appVersion);\n    };\n    // linux method does not support 'all' and 'any' interfaces\n    is.linux.api = ['not'];\n\n    // is current operating system mac?\n    is.mac = function() {\n        return /mac/.test(appVersion);\n    };\n    // mac method does not support 'all' and 'any' interfaces\n    is.mac.api = ['not'];\n\n    // is current device mobile?\n    is.mobile = function() {\n        return is.iphone() || is.ipod() || is.androidPhone() || is.blackberry() || is.windowsPhone();\n    };\n    // mobile method does not support 'all' and 'any' interfaces\n    is.mobile.api = ['not'];\n\n    // is current state offline?\n    is.offline = not(is.online);\n    // offline method does not support 'all' and 'any' interfaces\n    is.offline.api = ['not'];\n\n    // is current state online?\n    is.online = function() {\n        return !navigator || navigator.onLine === true;\n    };\n    // online method does not support 'all' and 'any' interfaces\n    is.online.api = ['not'];\n\n    // is current browser opera?\n    // parameter is optional\n    is.opera = function(range) {\n        var match = userAgent.match(/(?:^opera.+?version|opr)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // opera method does not support 'all' and 'any' interfaces\n    is.opera.api = ['not'];\n\n    // is current browser phantomjs?\n    // parameter is optional\n    is.phantom = function(range) {\n        var match = userAgent.match(/phantomjs\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // phantom method does not support 'all' and 'any' interfaces\n    is.phantom.api = ['not'];\n\n    // is current browser safari?\n    // parameter is optional\n    is.safari = function(range) {\n        var match = userAgent.match(/version\\/(\\d+).+?safari/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // safari method does not support 'all' and 'any' interfaces\n    is.safari.api = ['not'];\n\n    // is current device tablet?\n    is.tablet = function() {\n        return is.ipad() || is.androidTablet() || is.windowsTablet();\n    };\n    // tablet method does not support 'all' and 'any' interfaces\n    is.tablet.api = ['not'];\n\n    // is current device supports touch?\n    is.touchDevice = function() {\n        return !!document && ('ontouchstart' in freeSelf ||\n            ('DocumentTouch' in freeSelf && document instanceof DocumentTouch));\n    };\n    // touchDevice method does not support 'all' and 'any' interfaces\n    is.touchDevice.api = ['not'];\n\n    // is current operating system windows?\n    is.windows = function() {\n        return /win/.test(appVersion);\n    };\n    // windows method does not support 'all' and 'any' interfaces\n    is.windows.api = ['not'];\n\n    // is current device windows phone?\n    is.windowsPhone = function() {\n        return is.windows() && /phone/.test(userAgent);\n    };\n    // windowsPhone method does not support 'all' and 'any' interfaces\n    is.windowsPhone.api = ['not'];\n\n    // is current device windows tablet?\n    is.windowsTablet = function() {\n        return is.windows() && is.not.windowsPhone() && /touch/.test(userAgent);\n    };\n    // windowsTablet method does not support 'all' and 'any' interfaces\n    is.windowsTablet.api = ['not'];\n\n    // Object checks\n    /* -------------------------------------------------------------------------- */\n\n    // has a given object got parameterized count property?\n    is.propertyCount = function(object, count) {\n        if (is.not.object(object) || is.not.number(count)) {\n            return false;\n        }\n        var n = 0;\n        for (var property in object) {\n            if (hasOwnProperty.call(object, property) && ++n > count) {\n                return false;\n            }\n        }\n        return n === count;\n    };\n    // propertyCount method does not support 'all' and 'any' interfaces\n    is.propertyCount.api = ['not'];\n\n    // is given object has parameterized property?\n    is.propertyDefined = function(object, property) {\n        return is.object(object) && is.string(property) && property in object;\n    };\n    // propertyDefined method does not support 'all' and 'any' interfaces\n    is.propertyDefined.api = ['not'];\n\n    // Array checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given item in an array?\n    is.inArray = function(value, array) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === value) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // inArray method does not support 'all' and 'any' interfaces\n    is.inArray.api = ['not'];\n\n    // is a given array sorted?\n    is.sorted = function(array, sign) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        var predicate = comparator[sign] || comparator['>='];\n        for (var i = 1; i < array.length; i++) {\n            if (!predicate(array[i], array[i - 1])) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // API\n    // Set 'not', 'all' and 'any' interfaces to methods based on their api property\n    /* -------------------------------------------------------------------------- */\n\n    function setInterfaces() {\n        var options = is;\n        for (var option in options) {\n            if (hasOwnProperty.call(options, option) && is['function'](options[option])) {\n                var interfaces = options[option].api || ['not', 'all', 'any'];\n                for (var i = 0; i < interfaces.length; i++) {\n                    if (interfaces[i] === 'not') {\n                        is.not[option] = not(is[option]);\n                    }\n                    if (interfaces[i] === 'all') {\n                        is.all[option] = all(is[option]);\n                    }\n                    if (interfaces[i] === 'any') {\n                        is.any[option] = any(is[option]);\n                    }\n                }\n            }\n        }\n    }\n    setInterfaces();\n\n    // Configuration methods\n    // Intentionally added after setInterfaces function\n    /* -------------------------------------------------------------------------- */\n\n    // change namespace of library to prevent name collisions\n    // var preferredName = is.setNamespace();\n    // preferredName.odd(3);\n    // => true\n    is.setNamespace = function() {\n        root.is = previousIs;\n        return this;\n    };\n\n    // set optional regexes to methods\n    is.setRegexp = function(regexp, name) {\n        for (var r in regexes) {\n            if (hasOwnProperty.call(regexes, r) && (name === r)) {\n                regexes[r] = regexp;\n            }\n        }\n    };\n\n    return is;\n}));\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * @license\n * Video.js 7.1.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.1.0\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.1.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, noop);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_());\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uintToString(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uintToString(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this4 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this4.trigger('firstplay');\n            _this4.tech_.setCurrentTime(seekable$$1.end(0));\n            _this4.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this6 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this6.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.1.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n"],"sourceRoot":""}