{"version":3,"sources":["webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/is_js/is.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js"],"names":["clean","s","replace","module","exports","sa","i","arguments","length","fnToStr","Function","prototype","toString","constructorRegex","isES6ClassFn","value","fnStr","call","test","e","tryFunctionObject","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","Stream","__webpack_require__","MAX_TS","RO_THRESH","handleRollover","reference","direction","Math","abs","TimestampRolloverStream","type","lastDTS","referenceDTS","init","this","type_","push","data","undefined","dts","pts","trigger","flush","discontinuity","findBox","parseType","timescale","startTime","toUnsigned","path","size","end","subresults","results","byteLength","subarray","slice","concat","buffer","result","String","fromCharCode","traks","reduce","trak","tkhd","version","index","id","mdhd","fragment","trafs","baseTimes","apply","map","traf","tfhd","scale","baseTime","tfdt","pow","Infinity","min","isFinite","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","d","__webpack_exports__","global","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","floor","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","create","list","split","toLowerCase","isReservedAttribute","remove","arr","item","indexOf","splice","hasOwnProperty","hasOwn","key","cached","fn","cache","hit","camelizeRE","camelize","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","ctx","boundFn","a","l","_length","nativeBind","bind","toArray","start","ret","Array","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keys","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","parsePath","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","get","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","set","has","clear","warn","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","args","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","name","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","setTimeout","channel","port","port2","port1","onmessage","postMessage","Promise","p","resolve","then","withMacroTask","_withTask","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","queue","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createElement","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","applyNS","registerDeepBindings","force","style","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","document","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","applyMixin","vuexInit","store","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","replaceState","subscribe","mutation","state","forEachValue","isPromise","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","namespaced","addChild","getChild","actions","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","register","targetModule","newModule","root","getNamespace","rawChildModule","unregister","Store","plugins","strict","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","dispatch","commit","payload","installModule","resetStoreVM","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","action","registerAction","registerGetter","noNamespace","_type","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","entry","rootGetters","catch","rawGetter","_Vue","all","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","helper","index_esm","unpad","padded","decrypt","aes_decrypter_es_Decrypter","AsyncStream","classCallCheck","instance","Constructor","TypeError","createClass","descriptor","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","possibleConstructorReturn","self","ReferenceError","precompute","tables","encTable","decTable","sbox","sboxInv","x","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","Error","_key","encrypted0","encrypted1","encrypted2","encrypted3","out","offset","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","listener","off","dispose","pipe","destination","_Stream","_this","jobs","timeout_","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","byteOffset","decipher","decrypted","Uint8Array","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","Uint32Array","bytes","StreamTypes","parsePid","packet","pid","parsePayloadUnitStartIndicator","parseAdaptionField","pmtPid","parsePat","pusi","parsePmt","programMapTable","payloadOffset","sectionLength","tableEnd","programInfoLength","parsePesType","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","parsePesTime","ptsDtsFlags","pes","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","flushSource","right","arg","headers","row","isFunction","string","alert","confirm","prompt","parse","parseUTCTiming","url_toolkit__WEBPACK_IMPORTED_MODULE_0__","url_toolkit__WEBPACK_IMPORTED_MODULE_0___default","global_window__WEBPACK_IMPORTED_MODULE_1__","global_window__WEBPACK_IMPORTED_MODULE_1___default","formatAudioPlaylist","_ref","_attributes","attributes","playlist","NAME","BANDWIDTH","bandwidth","CODECS","codecs","uri","endList","timeline","periodIndex","resolvedUri","targetDuration","mediaSequence","contentProtection","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","organizeAudioPlaylists","playlists","role","language","lang","label","autoselect","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","width","height","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoOnly","_ref4","mimeType","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","master","allowCache","discontinuityStarts","mediaGroups","VIDEO","audio","_typeof","iterator","merge","_len","objects","resolveUrl","relativeUrl","buildAbsoluteURL","location","href","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","endRange","byterange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","now","periodStartWC","periodEndWC","periodDuration","ceil","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","r","segmentTime","t","count","nextS","flatten","lists","y","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","parseByDuration","_attributes$timescale4","_segmentRange$type","identifierPattern","identifierReplacement","values","identifier","format","constructTemplateUrl","url","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","segment","Time","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","SegmentURLToSegmentObject","segmentUrl","initSegment","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","element","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","exec","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","Date","parsers","mediaPresentationDuration","parsedValue","DEFAULT","parseAttributes","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","array","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","acc","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","parser","DOMParser","xml","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","SafeParseTuple","reviver","json","condition","message","isError","View","routerView","route","$route","_routerViewCache","depth","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","encodeURIComponent","decode","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","val2","trailingSlashRE","createRoute","record","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","stack","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","m","escaped","next","prefix","group","modifier","asterisk","partial","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","re","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","regexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","position","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","reverse","guards","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","search","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","isLocalhost","hostname","swUrl","checkValidServiceWorker","serviceWorker","registration","registerValidSW","onupdatefound","installingWorker","installing","onstatechange","controller","fetch","response","status","onLine","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","percentEncode","parseIso88591","unescape","parseId3TagSize","header","byteIndex","returnSize","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseSampleRate","parseAacTimestamp","frameStart","frameSize","frame","frameHeader","owner","autoKeyword","directionSetting","","lr","rl","alignSetting","findDirectionSetting","findAlignSetting","align","endTime","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","vertical","setting","SyntaxError","snapToLines","line","lineAlign","positionAlign","displayState","getCueAsHTML","convertCueToDOMTree","win","g","eval","isCallable","forEachArray","receiver","forEachString","forEachObject","object","k","thisArg","_objCreate","F","ParsingError","errorData","code","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","settings","alt","vals","vals0","integer","percent","skipWhitespace","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","track","textTrackList","mediaElement","trackList","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","bottom","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","textPos","formatStyle","move","box","BoxPosition","lh","offsetWidth","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","round","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","boxes","container","intersectArea","getSimpleBoxPosition","StringDecoder","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","paddedOverlay","shouldCompute","margin","fontSize","Parser","decoder","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","hasSubstring","oncue","onflush","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","baseURL","relativeURL","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","baseURLPath","newPath","substring","lastIndexOf","__WEBPACK_AMD_DEFINE_RESULT__","VERSION","not","any","func","getParams","comparator","<","<=",">",">=","compareVersion","NaN","op","boolean","char","date","domNode","nan","sameType","other","api","windowObject","empty","existy","falsy","truthy","above","decimal","equal","even","finite","infinite","negative","odd","positive","under","regexes","affirmative","alphaNumeric","caPostalCode","creditCard","dateString","email","eppPhone","hexadecimal","hexColor","ipv4","ipv6","nanpPhone","socialSecurityNumber","timeString","ukPostCode","usZipCode","regexpCheck","ip","capitalized","words","chr","endWith","lowerCase","palindrome","half","space","startWith","upperCase","days","months","getDay","dayLightSavingTime","january","getFullYear","july","stdTimezoneOffset","getTimezoneOffset","future","getTime","inDateRange","stamp","inLastMonth","setMonth","getMonth","inLastWeek","setDate","getDate","inLastYear","setFullYear","inNextMonth","inNextWeek","inNextYear","leapYear","past","quarterOfYear","quarter","today","todayString","toDateString","tomorrow","tomorrowString","weekend","weekday","yesterday","yesterdayString","freeGlobal","freeSelf","thisGlobal","previousIs","appVersion","vendor","setInterfaces","interfaces","android","androidPhone","androidTablet","blackberry","chrome","desktop","mobile","tablet","edge","firefox","ie","ios","iphone","ipad","ipod","linux","mac","windowsPhone","offline","online","opera","phantom","safari","windowsTablet","touchDevice","DocumentTouch","windows","propertyCount","propertyDefined","inArray","sorted","sign","predicate","setNamespace","setRegexp","_extends","LineStream","nextNewline","attributeSeparator","keyvalue","ParseStream","customParsers","tagType","title","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this2","customType","dataParser","lineStream","parseStream","uris","currentUri","currentMap","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","chunk","probe","aac","PES_TIMESCALE","MP2T_PACKET_LENGTH","SYNC_BYTE","isLikelyAacData","parsePsi_","pmt","startIndex","endIndex","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","currentFrame","video","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","sampleRate","timestamp","audioTimescale","inspectTs_","inspect","isAacData","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","readystatechange","xhr","readyState","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","aborted","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","nodeName","doccy","topLevel","minDoc","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","global_document__WEBPACK_IMPORTED_MODULE_1__","global_document__WEBPACK_IMPORTED_MODULE_1___default","tsml__WEBPACK_IMPORTED_MODULE_2__","tsml__WEBPACK_IMPORTED_MODULE_2___default","xhr__WEBPACK_IMPORTED_MODULE_3__","xhr__WEBPACK_IMPORTED_MODULE_3___default","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4__","videojs_vtt_js__WEBPACK_IMPORTED_MODULE_4___default","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5__","safe_json_parse_tuple__WEBPACK_IMPORTED_MODULE_5___default","url_toolkit__WEBPACK_IMPORTED_MODULE_6__","url_toolkit__WEBPACK_IMPORTED_MODULE_6___default","m3u8_parser__WEBPACK_IMPORTED_MODULE_7__","mpd_parser__WEBPACK_IMPORTED_MODULE_8__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9__","mux_js_lib_mp4_probe__WEBPACK_IMPORTED_MODULE_9___default","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10__","mux_js_lib_tools_ts_inspector_js__WEBPACK_IMPORTED_MODULE_10___default","aes_decrypter__WEBPACK_IMPORTED_MODULE_11__","log","level","logByType","lvl","levels","lvlRegExp","debug","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","taggedTemplateLiteralLoose","strings","each","accum","sources","isPlain","computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","isEl","isInFrame","createQuerier","createEl","properties","content","propName","attrName","appendContent","prependTo","hasClass","classToCheck","contains","classToAdd","classToRemove","toggleClass","classToToggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","clientLeft","scrollLeft","clientTop","scrollTop","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","emptyEl","normalizeContent","insertContent","isSingleLeftClick","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","hasData","removeData","_cleanUpEvents","elem","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","Events","_windowLoaded","videojs","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","styleSheet","bound","throttle","throttled","debounce","_later","EventTarget","allowedEvents_","ael","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","Component","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","addToBody","host","protocol","details","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","preselectTrack","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","stepChild","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userWasActive","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this8","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","_this9","middlewareSource","src_","notSupportedMessage","_this10","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this11","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","normalizeId","videojs$1","getPlayer","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","writeable","addLanguage","_mergeOptions","createTimeRange","dom","classCallCheck$1","createClass$1","get$2","get$$1","getPrototypeOf","inherits$1","possibleConstructorReturn$1","slicedToArray$1","sliceIterator","_arr","_d","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","PlaylistLoader","srcUrl","hls","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","sumDurations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","seekableStart","seekableEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","hexDump","ascii","tagDump","textRanges","utils","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","trackId","inbandTextTracks_","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","privateData","durationOfVideo","dur","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","commonjsGlobal","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","mdia","hdlr","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","window_1","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","view","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","nalUnitType","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","startPts","endPts","BASE_","EXT_","CONTROL_","OFFSET_","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","_MetadataStream","timestampRolloverStream","parseUtf8","tagParsers","TXXX","WXXX","PRIV","tagSize","bufferSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","packetsWaitingForPmt","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","timed-metadata","streamType","processPes_","STREAM_TYPES","h264","adts","timedMetadata","parsePes","packetLength","flushStream","stream$$1","forceFlush","packetData","packetFlushable","timelineStartInfo","codec","m2ts","PAT_PID","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","deltaScale","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","setTimestamp","bytesLeft","tempLength","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","ONE_SECOND_IN_TS","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","createDefaultSample","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS$1","currentObj","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","keepOriginalTimestamps","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","minSegmentDts","minSegmentPts","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","keyFrame","getGopForFusion_","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","dtsDistance","nearestGopObj","currentGop","currentGopObj","halfSecond","allowableOverlap","nearestDistance","currentNal","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","generator","classCallCheck$$1","createClass$$1","wireTransmuxerEvents","initArray","typedArray","gopInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","arity","extents","videoBuffered","audioBuffered","processPendingSegments_","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","clientOffset_","phonyUri","_phonyUri","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","handleInitSegmentResponse","handleSegmentResponse","encryptedBytes","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","getMostImportantError","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","isEndOfStream","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","VTT_LINE_TERMINATORS","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","syncPointStrategies","datetimeToDisplayTime","lastDistance","segmentStart","distance","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","inherits$$1","possibleConstructorReturn$$1","AsyncStream$$1","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groupPlaylists","variantLabel","matchingPlaylists","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","fastQualityChange_","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","seekTo","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","INITIAL_BANDWIDTH","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","source_","keySystems","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pauseLoading","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","scrollSetting","up","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/chunk-vendors.424470c5.js","sourcesContent":["function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nexport function register (swUrl, hooks) {\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, emit) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) {\n      emit('error', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, emit) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit)\n      }\n    })\n    .catch(function (error) {\n      if (!navigator.onLine) {\n        emit('offline')\n      } else {\n        emit('error', error)\n      }\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/;?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","/*!\n * is.js 0.8.0\n * Author: Aras Atasaygin\n */\n\n// AMD with global, Node, or global\n;(function(root, factory) {    // eslint-disable-line no-extra-semi\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            // Also create a global in case some scripts\n            // that are loaded still are looking for\n            // a global even when an AMD loader is in use.\n            return (root.is = factory());\n        });\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is self)\n        root.is = factory();\n    }\n}(this, function() {\n\n    // Baseline\n    /* -------------------------------------------------------------------------- */\n\n    // define 'is' object and current version\n    var is = {};\n    is.VERSION = '0.8.0';\n\n    // define interfaces\n    is.not = {};\n    is.all = {};\n    is.any = {};\n\n    // cache some methods to call later on\n    var toString = Object.prototype.toString;\n    var slice = Array.prototype.slice;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // helper function which reverses the sense of predicate result\n    function not(func) {\n        return function() {\n            return !func.apply(null, slice.call(arguments));\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if all pass\n    function all(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (!func.call(null, params[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if any pass\n    function any(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (func.call(null, params[i])) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    // build a 'comparator' object for various comparison checks\n    var comparator = {\n        '<': function(a, b) { return a < b; },\n        '<=': function(a, b) { return a <= b; },\n        '>': function(a, b) { return a > b; },\n        '>=': function(a, b) { return a >= b; }\n    }\n\n    // helper function which compares a version to a range\n    function compareVersion(version, range) {\n        var string = (range + '');\n        var n = +(string.match(/\\d+/) || NaN);\n        var op = string.match(/^[<>]=?|/)[0];\n        return comparator[op] ? comparator[op](version, n) : (version == n || n !== n);\n    }\n\n    // helper function which extracts params from arguments\n    function getParams(args) {\n        var params = slice.call(args);\n        var length = params.length;\n        if (length === 1 && is.array(params[0])) {    // support array\n            params = params[0];\n        }\n        return params;\n    }\n\n    // Type checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given value Arguments?\n    is.arguments = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Arguments]' ||\n            (value != null && typeof value === 'object' && 'callee' in value);\n    };\n\n    // is a given value Array?\n    is.array = Array.isArray || function(value) {    // check native isArray first\n        return toString.call(value) === '[object Array]';\n    };\n\n    // is a given value Boolean?\n    is.boolean = function(value) {\n        return value === true || value === false || toString.call(value) === '[object Boolean]';\n    };\n\n    // is a given value Char?\n    is.char = function(value) {\n        return is.string(value) && value.length === 1;\n    };\n\n    // is a given value Date Object?\n    is.date = function(value) {\n        return toString.call(value) === '[object Date]';\n    };\n\n    // is a given object a DOM node?\n    is.domNode = function(object) {\n        return is.object(object) && object.nodeType > 0;\n    };\n\n    // is a given value Error object?\n    is.error = function(value) {\n        return toString.call(value) === '[object Error]';\n    };\n\n    // is a given value function?\n    is['function'] = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Function]' || typeof value === 'function';\n    };\n\n    // is given value a pure JSON object?\n    is.json = function(value) {\n        return toString.call(value) === '[object Object]';\n    };\n\n    // is a given value NaN?\n    is.nan = function(value) {    // NaN is number :) Also it is the only value which does not equal itself\n        return value !== value;\n    };\n\n    // is a given value null?\n    is['null'] = function(value) {\n        return value === null;\n    };\n\n    // is a given value number?\n    is.number = function(value) {\n        return is.not.nan(value) && toString.call(value) === '[object Number]';\n    };\n\n    // is a given value object?\n    is.object = function(value) {\n        return Object(value) === value;\n    };\n\n    // is a given value RegExp?\n    is.regexp = function(value) {\n        return toString.call(value) === '[object RegExp]';\n    };\n\n    // are given values same type?\n    // prevent NaN, Number same type check\n    is.sameType = function(value, other) {\n        var tag = toString.call(value);\n        if (tag !== toString.call(other)) {\n            return false;\n        }\n        if (tag === '[object Number]') {\n            return !is.any.nan(value, other) || is.all.nan(value, other);\n        }\n        return true;\n    };\n    // sameType method does not support 'all' and 'any' interfaces\n    is.sameType.api = ['not'];\n\n    // is a given value String?\n    is.string = function(value) {\n        return toString.call(value) === '[object String]';\n    };\n\n    // is a given value undefined?\n    is.undefined = function(value) {\n        return value === void 0;\n    };\n\n    // is a given value window?\n    // setInterval method is only available for window object\n    is.windowObject = function(value) {\n        return value != null && typeof value === 'object' && 'setInterval' in value;\n    };\n\n    // Presence checks\n    /* -------------------------------------------------------------------------- */\n\n    //is a given value empty? Objects, arrays, strings\n    is.empty = function(value) {\n        if (is.object(value)) {\n            var length = Object.getOwnPropertyNames(value).length;\n            if (length === 0 || (length === 1 && is.array(value)) ||\n                    (length === 2 && is.arguments(value))) {\n                return true;\n            }\n            return false;\n        }\n        return value === '';\n    };\n\n    // is a given value existy?\n    is.existy = function(value) {\n        return value != null;\n    };\n\n    // is a given value falsy?\n    is.falsy = function(value) {\n        return !value;\n    };\n\n    // is a given value truthy?\n    is.truthy = not(is.falsy);\n\n    // Arithmetic checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given number above minimum parameter?\n    is.above = function(n, min) {\n        return is.all.number(n, min) && n > min;\n    };\n    // above method does not support 'all' and 'any' interfaces\n    is.above.api = ['not'];\n\n    // is a given number decimal?\n    is.decimal = function(n) {\n        return is.number(n) && n % 1 !== 0;\n    };\n\n    // are given values equal? supports numbers, strings, regexes, booleans\n    // TODO: Add object and array support\n    is.equal = function(value, other) {\n        // check 0 and -0 equity with Infinity and -Infinity\n        if (is.all.number(value, other)) {\n            return value === other && 1 / value === 1 / other;\n        }\n        // check regexes as strings too\n        if (is.all.string(value, other) || is.all.regexp(value, other)) {\n            return '' + value === '' + other;\n        }\n        if (is.all.boolean(value, other)) {\n            return value === other;\n        }\n        return false;\n    };\n    // equal method does not support 'all' and 'any' interfaces\n    is.equal.api = ['not'];\n\n    // is a given number even?\n    is.even = function(n) {\n        return is.number(n) && n % 2 === 0;\n    };\n\n    // is a given number finite?\n    is.finite = isFinite || function(n) {\n        return is.not.infinite(n) && is.not.nan(n);\n    };\n\n    // is a given number infinite?\n    is.infinite = function(n) {\n        return n === Infinity || n === -Infinity;\n    };\n\n    // is a given number integer?\n    is.integer = function(n) {\n        return is.number(n) && n % 1 === 0;\n    };\n\n    // is a given number negative?\n    is.negative = function(n) {\n        return is.number(n) && n < 0;\n    };\n\n    // is a given number odd?\n    is.odd = function(n) {\n        return is.number(n) && n % 2 === 1;\n    };\n\n    // is a given number positive?\n    is.positive = function(n) {\n        return is.number(n) && n > 0;\n    };\n\n    // is a given number above maximum parameter?\n    is.under = function(n, max) {\n        return is.all.number(n, max) && n < max;\n    };\n    // least method does not support 'all' and 'any' interfaces\n    is.under.api = ['not'];\n\n    // is a given number within minimum and maximum parameters?\n    is.within = function(n, min, max) {\n        return is.all.number(n, min, max) && n > min && n < max;\n    };\n    // within method does not support 'all' and 'any' interfaces\n    is.within.api = ['not'];\n\n    // Regexp checks\n    /* -------------------------------------------------------------------------- */\n    // Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook\n    // Scott Gonzalez: Email address validation\n\n    // dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two or four digits for the year\n    // eppPhone match extensible provisioning protocol format\n    // nanpPhone match north american number plan format\n    // time match hours, minutes, and seconds, 24-hour clock\n    var regexes = {\n        affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,\n        alphaNumeric: /^[A-Za-z0-9]+$/,\n        caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\s?[0-9][A-Z][0-9]$/,\n        creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\n        dateString: /^(1[0-2]|0?[1-9])([\\/-])(3[01]|[12][0-9]|0?[1-9])(?:\\2)(?:[0-9]{2})?[0-9]{2}$/,\n        email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, // eslint-disable-line no-control-regex\n        eppPhone: /^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x.+)?$/,\n        hexadecimal: /^(?:0x)?[0-9a-fA-F]+$/,\n        hexColor: /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,\n        ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n        ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\n        nanpPhone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n        socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,\n        timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\n        ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,\n        url: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\n        usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/\n    };\n\n    function regexpCheck(regexp, regexes) {\n        is[regexp] = function(value) {\n            return regexes[regexp].test(value);\n        };\n    }\n\n    // create regexp checks methods from 'regexes' object\n    for (var regexp in regexes) {\n        if (regexes.hasOwnProperty(regexp)) {\n            regexpCheck(regexp, regexes);\n        }\n    }\n\n    // simplify IP checks by calling the regex helpers for IPv4 and IPv6\n    is.ip = function(value) {\n        return is.ipv4(value) || is.ipv6(value);\n    };\n\n    // String checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given string or sentence capitalized?\n    is.capitalized = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        var words = string.split(' ');\n        for (var i = 0; i < words.length; i++) {\n            var word = words[i];\n            if (word.length) {\n                var chr = word.charAt(0);\n                if (chr !== chr.toUpperCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n\n    // is string end with a given target parameter?\n    is.endWith = function(string, target) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        target += '';\n        var position = string.length - target.length;\n        return position >= 0 && string.indexOf(target, position) === position;\n    };\n    // endWith method does not support 'all' and 'any' interfaces\n    is.endWith.api = ['not'];\n\n    // is a given string include parameter target?\n    is.include = function(string, target) {\n        return string.indexOf(target) > -1;\n    };\n    // include method does not support 'all' and 'any' interfaces\n    is.include.api = ['not'];\n\n    // is a given string all lowercase?\n    is.lowerCase = function(string) {\n        return is.string(string) && string === string.toLowerCase();\n    };\n\n    // is a given string palindrome?\n    is.palindrome = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        string = string.replace(/[^a-zA-Z0-9]+/g, '').toLowerCase();\n        var length = string.length - 1;\n        for (var i = 0, half = Math.floor(length / 2); i <= half; i++) {\n            if (string.charAt(i) !== string.charAt(length - i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // is a given value space?\n    // horizantal tab: 9, line feed: 10, vertical tab: 11, form feed: 12, carriage return: 13, space: 32\n    is.space = function(value) {\n        if (is.not.char(value)) {\n            return false;\n        }\n        var charCode = value.charCodeAt(0);\n        return (charCode > 8 && charCode < 14) || charCode === 32;\n    };\n\n    // is string start with a given target parameter?\n    is.startWith = function(string, target) {\n        return is.string(string) && string.indexOf(target) === 0;\n    };\n    // startWith method does not support 'all' and 'any' interfaces\n    is.startWith.api = ['not'];\n\n    // is a given string all uppercase?\n    is.upperCase = function(string) {\n        return is.string(string) && string === string.toUpperCase();\n    };\n\n    // Time checks\n    /* -------------------------------------------------------------------------- */\n\n    var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    var months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\n    // is a given dates day equal given day parameter?\n    is.day = function(date, day) {\n        return is.date(date) && day.toLowerCase() === days[date.getDay()];\n    };\n    // day method does not support 'all' and 'any' interfaces\n    is.day.api = ['not'];\n\n    // is a given date in daylight saving time?\n    is.dayLightSavingTime = function(date) {\n        var january = new Date(date.getFullYear(), 0, 1);\n        var july = new Date(date.getFullYear(), 6, 1);\n        var stdTimezoneOffset = Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());\n        return date.getTimezoneOffset() < stdTimezoneOffset;\n    };\n\n    // is a given date future?\n    is.future = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() > now.getTime();\n    };\n\n    // is date within given range?\n    is.inDateRange = function(date, start, end) {\n        if (is.not.date(date) || is.not.date(start) || is.not.date(end)) {\n            return false;\n        }\n        var stamp = date.getTime();\n        return stamp > start.getTime() && stamp < end.getTime();\n    };\n    // inDateRange method does not support 'all' and 'any' interfaces\n    is.inDateRange.api = ['not'];\n\n    // is a given date in last month range?\n    is.inLastMonth = function(date) {\n        return is.inDateRange(date, new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date());\n    };\n\n    // is a given date in last week range?\n    is.inLastWeek = function(date) {\n        return is.inDateRange(date, new Date(new Date().setDate(new Date().getDate() - 7)), new Date());\n    };\n\n    // is a given date in last year range?\n    is.inLastYear = function(date) {\n        return is.inDateRange(date, new Date(new Date().setFullYear(new Date().getFullYear() - 1)), new Date());\n    };\n\n    // is a given date in next month range?\n    is.inNextMonth = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setMonth(new Date().getMonth() + 1)));\n    };\n\n    // is a given date in next week range?\n    is.inNextWeek = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setDate(new Date().getDate() + 7)));\n    };\n\n    // is a given date in next year range?\n    is.inNextYear = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setFullYear(new Date().getFullYear() + 1)));\n    };\n\n    // is the given year a leap year?\n    is.leapYear = function(year) {\n        return is.number(year) && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    };\n\n    // is a given dates month equal given month parameter?\n    is.month = function(date, month) {\n        return is.date(date) && month.toLowerCase() === months[date.getMonth()];\n    };\n    // month method does not support 'all' and 'any' interfaces\n    is.month.api = ['not'];\n\n    // is a given date past?\n    is.past = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() < now.getTime();\n    };\n\n    // is a given date in the parameter quarter?\n    is.quarterOfYear = function(date, quarter) {\n        return is.date(date) && is.number(quarter) && quarter === Math.floor((date.getMonth() + 3) / 3);\n    };\n    // quarterOfYear method does not support 'all' and 'any' interfaces\n    is.quarterOfYear.api = ['not'];\n\n    // is a given date indicate today?\n    is.today = function(date) {\n        var now = new Date();\n        var todayString = now.toDateString();\n        return is.date(date) && date.toDateString() === todayString;\n    };\n\n    // is a given date indicate tomorrow?\n    is.tomorrow = function(date) {\n        var now = new Date();\n        var tomorrowString = new Date(now.setDate(now.getDate() + 1)).toDateString();\n        return is.date(date) && date.toDateString() === tomorrowString;\n    };\n\n    // is a given date weekend?\n    // 6: Saturday, 0: Sunday\n    is.weekend = function(date) {\n        return is.date(date) && (date.getDay() === 6 || date.getDay() === 0);\n    };\n\n    // is a given date weekday?\n    is.weekday = not(is.weekend);\n\n    // is a given dates year equal given year parameter?\n    is.year = function(date, year) {\n        return is.date(date) && is.number(year) && year === date.getFullYear();\n    };\n    // year method does not support 'all' and 'any' interfaces\n    is.year.api = ['not'];\n\n    // is a given date indicate yesterday?\n    is.yesterday = function(date) {\n        var now = new Date();\n        var yesterdayString = new Date(now.setDate(now.getDate() - 1)).toDateString();\n        return is.date(date) && date.toDateString() === yesterdayString;\n    };\n\n    // Environment checks\n    /* -------------------------------------------------------------------------- */\n\n    var freeGlobal = is.windowObject(typeof global == 'object' && global) && global;\n    var freeSelf = is.windowObject(typeof self == 'object' && self) && self;\n    var thisGlobal = is.windowObject(typeof this == 'object' && this) && this;\n    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n    var document = freeSelf && freeSelf.document;\n    var previousIs = root.is;\n\n    // store navigator properties to use later\n    var navigator = freeSelf && freeSelf.navigator;\n    var appVersion = (navigator && navigator.appVersion || '').toLowerCase();\n    var userAgent = (navigator && navigator.userAgent || '').toLowerCase();\n    var vendor = (navigator && navigator.vendor || '').toLowerCase();\n\n    // is current device android?\n    is.android = function() {\n        return /android/.test(userAgent);\n    };\n    // android method does not support 'all' and 'any' interfaces\n    is.android.api = ['not'];\n\n    // is current device android phone?\n    is.androidPhone = function() {\n        return /android/.test(userAgent) && /mobile/.test(userAgent);\n    };\n    // androidPhone method does not support 'all' and 'any' interfaces\n    is.androidPhone.api = ['not'];\n\n    // is current device android tablet?\n    is.androidTablet = function() {\n        return /android/.test(userAgent) && !/mobile/.test(userAgent);\n    };\n    // androidTablet method does not support 'all' and 'any' interfaces\n    is.androidTablet.api = ['not'];\n\n    // is current device blackberry?\n    is.blackberry = function() {\n        return /blackberry/.test(userAgent) || /bb10/.test(userAgent);\n    };\n    // blackberry method does not support 'all' and 'any' interfaces\n    is.blackberry.api = ['not'];\n\n    // is current browser chrome?\n    // parameter is optional\n    is.chrome = function(range) {\n        var match = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null;\n        return match !== null && compareVersion(match[1], range);\n    };\n    // chrome method does not support 'all' and 'any' interfaces\n    is.chrome.api = ['not'];\n\n    // is current device desktop?\n    is.desktop = function() {\n        return is.not.mobile() && is.not.tablet();\n    };\n    // desktop method does not support 'all' and 'any' interfaces\n    is.desktop.api = ['not'];\n\n    // is current browser edge?\n    // parameter is optional\n    is.edge = function(range) {\n        var match = userAgent.match(/edge\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // edge method does not support 'all' and 'any' interfaces\n    is.edge.api = ['not'];\n\n    // is current browser firefox?\n    // parameter is optional\n    is.firefox = function(range) {\n        var match = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // firefox method does not support 'all' and 'any' interfaces\n    is.firefox.api = ['not'];\n\n    // is current browser internet explorer?\n    // parameter is optional\n    is.ie = function(range) {\n        var match = userAgent.match(/(?:msie |trident.+?; rv:)(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ie method does not support 'all' and 'any' interfaces\n    is.ie.api = ['not'];\n\n    // is current device ios?\n    is.ios = function() {\n        return is.iphone() || is.ipad() || is.ipod();\n    };\n    // ios method does not support 'all' and 'any' interfaces\n    is.ios.api = ['not'];\n\n    // is current device ipad?\n    // parameter is optional\n    is.ipad = function(range) {\n        var match = userAgent.match(/ipad.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipad method does not support 'all' and 'any' interfaces\n    is.ipad.api = ['not'];\n\n    // is current device iphone?\n    // parameter is optional\n    is.iphone = function(range) {\n        // original iPhone doesn't have the os portion of the UA\n        var match = userAgent.match(/iphone(?:.+?os (\\d+))?/);\n        return match !== null && compareVersion(match[1] || 1, range);\n    };\n    // iphone method does not support 'all' and 'any' interfaces\n    is.iphone.api = ['not'];\n\n    // is current device ipod?\n    // parameter is optional\n    is.ipod = function(range) {\n        var match = userAgent.match(/ipod.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipod method does not support 'all' and 'any' interfaces\n    is.ipod.api = ['not'];\n\n    // is current operating system linux?\n    is.linux = function() {\n        return /linux/.test(appVersion);\n    };\n    // linux method does not support 'all' and 'any' interfaces\n    is.linux.api = ['not'];\n\n    // is current operating system mac?\n    is.mac = function() {\n        return /mac/.test(appVersion);\n    };\n    // mac method does not support 'all' and 'any' interfaces\n    is.mac.api = ['not'];\n\n    // is current device mobile?\n    is.mobile = function() {\n        return is.iphone() || is.ipod() || is.androidPhone() || is.blackberry() || is.windowsPhone();\n    };\n    // mobile method does not support 'all' and 'any' interfaces\n    is.mobile.api = ['not'];\n\n    // is current state offline?\n    is.offline = not(is.online);\n    // offline method does not support 'all' and 'any' interfaces\n    is.offline.api = ['not'];\n\n    // is current state online?\n    is.online = function() {\n        return !navigator || navigator.onLine === true;\n    };\n    // online method does not support 'all' and 'any' interfaces\n    is.online.api = ['not'];\n\n    // is current browser opera?\n    // parameter is optional\n    is.opera = function(range) {\n        var match = userAgent.match(/(?:^opera.+?version|opr)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // opera method does not support 'all' and 'any' interfaces\n    is.opera.api = ['not'];\n\n    // is current browser phantomjs?\n    // parameter is optional\n    is.phantom = function(range) {\n        var match = userAgent.match(/phantomjs\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // phantom method does not support 'all' and 'any' interfaces\n    is.phantom.api = ['not'];\n\n    // is current browser safari?\n    // parameter is optional\n    is.safari = function(range) {\n        var match = userAgent.match(/version\\/(\\d+).+?safari/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // safari method does not support 'all' and 'any' interfaces\n    is.safari.api = ['not'];\n\n    // is current device tablet?\n    is.tablet = function() {\n        return is.ipad() || is.androidTablet() || is.windowsTablet();\n    };\n    // tablet method does not support 'all' and 'any' interfaces\n    is.tablet.api = ['not'];\n\n    // is current device supports touch?\n    is.touchDevice = function() {\n        return !!document && ('ontouchstart' in freeSelf ||\n            ('DocumentTouch' in freeSelf && document instanceof DocumentTouch));\n    };\n    // touchDevice method does not support 'all' and 'any' interfaces\n    is.touchDevice.api = ['not'];\n\n    // is current operating system windows?\n    is.windows = function() {\n        return /win/.test(appVersion);\n    };\n    // windows method does not support 'all' and 'any' interfaces\n    is.windows.api = ['not'];\n\n    // is current device windows phone?\n    is.windowsPhone = function() {\n        return is.windows() && /phone/.test(userAgent);\n    };\n    // windowsPhone method does not support 'all' and 'any' interfaces\n    is.windowsPhone.api = ['not'];\n\n    // is current device windows tablet?\n    is.windowsTablet = function() {\n        return is.windows() && is.not.windowsPhone() && /touch/.test(userAgent);\n    };\n    // windowsTablet method does not support 'all' and 'any' interfaces\n    is.windowsTablet.api = ['not'];\n\n    // Object checks\n    /* -------------------------------------------------------------------------- */\n\n    // has a given object got parameterized count property?\n    is.propertyCount = function(object, count) {\n        if (is.not.object(object) || is.not.number(count)) {\n            return false;\n        }\n        var n = 0;\n        for (var property in object) {\n            if (hasOwnProperty.call(object, property) && ++n > count) {\n                return false;\n            }\n        }\n        return n === count;\n    };\n    // propertyCount method does not support 'all' and 'any' interfaces\n    is.propertyCount.api = ['not'];\n\n    // is given object has parameterized property?\n    is.propertyDefined = function(object, property) {\n        return is.object(object) && is.string(property) && property in object;\n    };\n    // propertyDefined method does not support 'all' and 'any' interfaces\n    is.propertyDefined.api = ['not'];\n\n    // Array checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given item in an array?\n    is.inArray = function(value, array) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === value) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // inArray method does not support 'all' and 'any' interfaces\n    is.inArray.api = ['not'];\n\n    // is a given array sorted?\n    is.sorted = function(array, sign) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        var predicate = comparator[sign] || comparator['>='];\n        for (var i = 1; i < array.length; i++) {\n            if (!predicate(array[i], array[i - 1])) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // API\n    // Set 'not', 'all' and 'any' interfaces to methods based on their api property\n    /* -------------------------------------------------------------------------- */\n\n    function setInterfaces() {\n        var options = is;\n        for (var option in options) {\n            if (hasOwnProperty.call(options, option) && is['function'](options[option])) {\n                var interfaces = options[option].api || ['not', 'all', 'any'];\n                for (var i = 0; i < interfaces.length; i++) {\n                    if (interfaces[i] === 'not') {\n                        is.not[option] = not(is[option]);\n                    }\n                    if (interfaces[i] === 'all') {\n                        is.all[option] = all(is[option]);\n                    }\n                    if (interfaces[i] === 'any') {\n                        is.any[option] = any(is[option]);\n                    }\n                }\n            }\n        }\n    }\n    setInterfaces();\n\n    // Configuration methods\n    // Intentionally added after setInterfaces function\n    /* -------------------------------------------------------------------------- */\n\n    // change namespace of library to prevent name collisions\n    // var preferredName = is.setNamespace();\n    // preferredName.odd(3);\n    // => true\n    is.setNamespace = function() {\n        root.is = previousIs;\n        return this;\n    };\n\n    // set optional regexes to methods\n    is.setRegexp = function(regexp, name) {\n        for (var r in regexes) {\n            if (hasOwnProperty.call(regexes, r) && (name === r)) {\n                regexes[r] = regexp;\n            }\n        }\n    };\n\n    return is;\n}));\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/**\n * @license\n * Video.js 7.1.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.1.0\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.1.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, noop);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything() {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_());\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uintToString(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uintToString(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method may perform destructive actions, like\n     * removing already buffered content, to readjust the currently\n     * active playlist quickly.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this4 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this4.trigger('firstplay');\n            _this4.tech_.setCurrentTime(seekable$$1.end(0));\n            _this4.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.tech_.setCurrentTime(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this5 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this5.mediaSource.duration = newDuration;\n        _this5.tech_.trigger('durationchange');\n\n        _this5.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this6 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this6.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.1.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n"],"sourceRoot":""}